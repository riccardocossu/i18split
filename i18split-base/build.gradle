apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

ext.slf4j = [version:'1.7.6']

sourceCompatibility = 1.7
version = '1.1.0-SNAPSHOT'
group = 'net.riccardocossu.i18split'
project.archivesBaseName='i18split-base'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

if (!project.hasProperty("sonatypeUsername")) {
	ext.sonatypeUsername = "none"
}

if (!project.hasProperty("sonatypePassword")) {
	ext.sonatypePassword = "none"
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.3'
}

def defaultEncoding = 'UTF-8'
compileGroovy {
	groovyOptions.encoding = defaultEncoding
}
compileTestGroovy {
	groovyOptions.encoding = defaultEncoding
}


jar {
    manifest {
        attributes 'Implementation-Title': 'i18split base', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
	compile 'org.codehaus.groovy:groovy-all:2.3.3'
	compile 'au.com.bytecode:opencsv:2.4'
	compile ('commons-configuration:commons-configuration:1.10') {
		exclude module: 'commons-logging'
	}
	compile "org.slf4j:slf4j-api:${slf4j.version}"
	runtime 'ch.qos.logback:logback-classic:1.1.2'
	runtime "org.slf4j:jcl-over-slf4j:${slf4j.version}"
//    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

artifacts {
	archives jar

	archives javadocJar
	archives sourcesJar
}

signing {
	required { isReleaseVersion }
	sign configurations.archives
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
	   mavenDeployer {
		   beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

		   repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
			 authentication(userName: sonatypeUsername, password: sonatypePassword)
		   }

		   pom.project {
			  name 'i18split-base'
			  packaging 'jar'
			  description 'i18split-base is the base library upon which all future build plugins will be based; it is meant to convert 18n property files to a single csv and vice versa'
			  url 'https://github.com/riccardocossu/i18split'

			  scm {
				  url 'scm:git@github.com:riccardocossu/i18split.git'
				  connection 'scm:git@github.com:riccardocossu/i18split.git'
				  developerConnection 'git@github.com:riccardocossu/i18split.git'
			  }

			  licenses {
				  license {
					  name 'GNU GENERAL PUBLIC LICENSE Version 3 '
					  url 'http://www.gnu.org/licenses/gpl.txt'
					  distribution 'repo'
				  }
			  }

			  developers {
				  developer {
					  id 'riccardocossu'
					  name 'Riccardo Cossu'
				  }
			  }
		  }
	   }
    }
}
